import importlib
import importlib.util
import os
import sys

from typing import List

from common.debug import *


def pythonLoader(
    filepaths: List[str], additionalPaths: List[str] = [], constants={}
) -> None:
    """Load the python modules from the paths"""

    ## Add the additional paths to the import path
    for path in additionalPaths:
        debugMsg(5, f"Getting path {path} for import path")
        ## Check if file exists
        if not os.path.exists(path):
            errorMsg(f"{path} does not exist")

        ## Add path to the import path
        path_to_add = path
        if os.path.isfile(path_to_add):
            path_to_add = os.path.dirname(path_to_add)
        path_to_add = os.path.abspath(path_to_add)
        debugMsg(5, f"Adding path {path_to_add} to the import path")
        sys.path.append(path_to_add)

    ## Load the files
    for filePath in filepaths:
        debugMsg(5, f"Loading file {filePath}")
        ## Check if file exists
        if not os.path.exists(filePath):
            errorMsg(f"File {filePath} does not exist")

        ## Add path to the import path
        path = os.path.dirname(filePath)
        sys.path.append(path)

        filename = os.path.basename(filePath)

        if filename[-3:] != ".py":
            errorMsg("File {} is not a python file".format(filename))

        module_name = filename[:-3]  # remove the '.py' extension
        createConstantImport(constants)
        spec = importlib.util.spec_from_file_location(module_name, filePath)
        ## import module from the file's path
        mod = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(mod)


def createConstantImport(constants) -> None:
    """Creates the file that holds the constants.

    The constants are defined in the program using the #constexp directive. Any
    values provided will be added to all imported libraries.
    """

    if not constants:
        return

    file = open("constants.py", "w")
    file.writelines(
        "# This file is automatically generated by the linker\n# Do not edit this file\n\n"
    )
    for constant in constants:
        debugMsg(5, f"Adding constant {constant} to constants.py")
        file.write(f"{constant} = {constants[constant]}\n")

    file.close()
