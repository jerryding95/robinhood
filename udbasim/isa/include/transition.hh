/* AUTOGENERATED FILE - DO NOT MODIFY */
#pragma once
#include <cstdint>
#include <string>
#include "encodings.hh"

namespace basim {

struct ArchState; // forward declaration
class Cycles; // forward declaration

/* basicTX Transition */
Cycles exeTransbasicTX(ArchState& ast, EncInst inst);
std::string disasmTransbasicTX(EncInst inst);
EncInst constrTransbasicTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* majorityTX Transition */
Cycles exeTransmajorityTX(ArchState& ast, EncInst inst);
std::string disasmTransmajorityTX(EncInst inst);
EncInst constrTransmajorityTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* defaultTX Transition */
Cycles exeTransdefaultTX(ArchState& ast, EncInst inst);
std::string disasmTransdefaultTX(EncInst inst);
EncInst constrTransdefaultTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* epsilonTX Transition */
Cycles exeTransepsilonTX(ArchState& ast, EncInst inst);
std::string disasmTransepsilonTX(EncInst inst);
EncInst constrTransepsilonTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* commonTX Transition */
Cycles exeTranscommonTX(ArchState& ast, EncInst inst);
std::string disasmTranscommonTX(EncInst inst);
EncInst constrTranscommonTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* flaggedTX Transition */
Cycles exeTransflaggedTX(ArchState& ast, EncInst inst);
std::string disasmTransflaggedTX(EncInst inst);
EncInst constrTransflaggedTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* refillTX Transition */
Cycles exeTransrefillTX(ArchState& ast, EncInst inst);
std::string disasmTransrefillTX(EncInst inst);
EncInst constrTransrefillTX(TransitionType type, int64_t attach, int64_t target, uint64_t signature);

/* eventTX Transition */
Cycles exeTranseventTX(ArchState& ast, EncInst inst);
std::string disasmTranseventTX(EncInst inst);
EncInst constrTranseventTX(TransitionType type, int64_t attach, int64_t target);


}; // namespace basim
/* AUTOGENERATED FILE - DO NOT MODIFY */
