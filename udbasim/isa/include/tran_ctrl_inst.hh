/* AUTOGENERATED FILE - DO NOT MODIFY */
#pragma once
#include <cstdint>
#include <string>
#include "encodings.hh"

namespace basim {

struct ArchState; // forward declaration
class Cycles; // forward declaration

/* lastact Instruction */
Cycles exeInstLastact(ArchState& ast, EncInst inst);
std::string disasmInstLastact(EncInst inst);
EncInst constrInstLastact();

/* ssprop Instruction */
Cycles exeInstSsprop(ArchState& ast, EncInst inst);
std::string disasmInstSsprop(EncInst inst);
EncInst constrInstSsprop(uint64_t type, uint64_t value);

/* fstate Instruction */
Cycles exeInstFstate(ArchState& ast, EncInst inst);
std::string disasmInstFstate(EncInst inst);
EncInst constrInstFstate(uint64_t prop);

/* siw Instruction */
Cycles exeInstSiw(ArchState& ast, EncInst inst);
std::string disasmInstSiw(EncInst inst);
EncInst constrInstSiw(uint64_t width);

/* refill Instruction */
Cycles exeInstRefill(ArchState& ast, EncInst inst);
std::string disasmInstRefill(EncInst inst);
EncInst constrInstRefill(uint64_t imm);

}; // namespace basim
/* AUTOGENERATED FILE - DO NOT MODIFY */
