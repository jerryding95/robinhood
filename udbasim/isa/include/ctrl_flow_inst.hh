/* AUTOGENERATED FILE - DO NOT MODIFY */
#pragma once
#include <cstdint>
#include <string>
#include "encodings.hh"

namespace basim {

struct ArchState; // forward declaration
class Cycles; // forward declaration

/* bne, beq, bgt, ble Instruction */
Cycles exeInstBneBeqBgtBle(ArchState& ast, EncInst inst);
std::string disasmInstBneBeqBgtBle(EncInst inst);
EncInst constrInstBneBeqBgtBle(uint64_t func, RegId X1, RegId X2, uint64_t targeta, int64_t targetb);

/* bneu, bequ, bgtu, bleu Instruction */
Cycles exeInstBneuBequBgtuBleu(ArchState& ast, EncInst inst);
std::string disasmInstBneuBequBgtuBleu(EncInst inst);
EncInst constrInstBneuBequBgtuBleu(uint64_t func, RegId X1, RegId X2, uint64_t targeta, int64_t targetb);

/* bnei, beqi, bgti, blei, blti, bgei Instruction */
Cycles exeInstBneiBeqiBgtiBleiBltiBgei(ArchState& ast, EncInst inst);
std::string disasmInstBneiBeqiBgtiBleiBltiBgei(EncInst inst);
EncInst constrInstBneiBeqiBgtiBleiBltiBgei(uint64_t func, RegId X1, int64_t imm, uint64_t targeta, int64_t targetb);

/* bneiu, beqiu, bgtiu, bleiu, bltiu, bgeiu Instruction */
Cycles exeInstBneiuBeqiuBgtiuBleiuBltiuBgeiu(ArchState& ast, EncInst inst);
std::string disasmInstBneiuBeqiuBgtiuBleiuBltiuBgeiu(EncInst inst);
EncInst constrInstBneiuBeqiuBgtiuBleiuBltiuBgeiu(uint64_t func, RegId X1, uint64_t imm, uint64_t targeta, int64_t targetb);

/* jmp Instruction */
Cycles exeInstJmp(ArchState& ast, EncInst inst);
std::string disasmInstJmp(EncInst inst);
EncInst constrInstJmp(int64_t imm);

}; // namespace basim
/* AUTOGENERATED FILE - DO NOT MODIFY */
