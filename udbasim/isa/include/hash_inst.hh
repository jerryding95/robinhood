/* AUTOGENERATED FILE - DO NOT MODIFY */
#pragma once
#include <cstdint>
#include <string>
#include "encodings.hh"

namespace basim {

struct ArchState; // forward declaration
class Cycles; // forward declaration

/* hashsb32 Instruction */
Cycles exeInstHashsb32(ArchState& ast, EncInst inst);
std::string disasmInstHashsb32(EncInst inst);
EncInst constrInstHashsb32(RegId Xd, uint64_t htbase);

/* hashsb64 Instruction */
Cycles exeInstHashsb64(ArchState& ast, EncInst inst);
std::string disasmInstHashsb64(EncInst inst);
EncInst constrInstHashsb64(RegId Xs, RegId Xd);

/* hashl64 Instruction */
Cycles exeInstHashl64(ArchState& ast, EncInst inst);
std::string disasmInstHashl64(EncInst inst);
EncInst constrInstHashl64(RegId Xs, RegId Xd);

/* hash Instruction */
Cycles exeInstHash(ArchState& ast, EncInst inst);
std::string disasmInstHash(EncInst inst);
EncInst constrInstHash(RegId Xe, RegId Xd);

/* hashl Instruction */
Cycles exeInstHashl(ArchState& ast, EncInst inst);
std::string disasmInstHashl(EncInst inst);
EncInst constrInstHashl(RegId Xe, RegId Xd, uint64_t lenw);

}; // namespace basim
/* AUTOGENERATED FILE - DO NOT MODIFY */
